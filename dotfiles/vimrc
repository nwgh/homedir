set nocompatible

filetype on
filetype plugin on
filetype indent on

set visualbell " NO BEEPING
set textwidth=0 " Don't want wrapping by default
set showmatch " Show matching brackets if on screen
set showmode " Indicate mode in bottom line
set showcmd " Show commands when typing
set ignorecase " Case-insensitive search by default
set smartcase " ... But become sensitive if uppercase is used
set backspace=indent,eol,start " Backspace ALL the things!
set tabstop=4 " 4 spaces are good
set shiftwidth=4 " Yep, still good
set softtabstop=4 " And still... they're good
set modeline " Enable use of modelines in files
set hidden " Hide instead of unloading abandoned buffers
set history=1000 " Number of commands to keep in history
set scrolloff=2 " Number of lines to guarantee above/below current
set incsearch " Incremental search (no enter needed)
set hlsearch " Hilight search matches
set ttyfast " Generally used locally, so we have fast TTYs
set mouse=a " Mouse is enabled in all modes
set notitle " Don't muck with the terminal title
set ruler " Show line/column at the bottom
set laststatus=2 " Always show status line
set nobackup " Don't keep backups around after write succeeds
set writebackup " But do write them while writing a buffer, just in case
set number " Show line numbers
set cursorline " Hilight the current line

" see :help smartindent for inoremap details
set smartindent " Smart auto indentation
set smarttab " Use tabs or spaces depending on the file
set expandtab " By default, use spaces instead of tabs

" Better filename completion (more like the shell)
set wildmode=longest:list
set wildmenu

" Herein lies all the magic for file types
autocmd!
syntax on
autocmd BufNewFile,BufRead **/mozilla/*.cpp,**/mozilla/*.h,**/mozilla/*.idl,**/mozilla/*.ipdl so $HOME/.vim/mozilla.vim
autocmd BufNewFile,BufRead **/mozilla/*.js,**/mozilla/*.jsm so $HOME/.vim/mozilla_js.vim
autocmd BufNewFile,BufRead *.md set ft=markdown
autocmd FileType javascript so $HOME/.vim/js.vim
autocmd FileType c so $HOME/.vim/c.vim
autocmd FileType cpp so $HOME/.vim/cpp.vim
autocmd FileType makefile so $HOME/.vim/Make.vim
autocmd FileType sql so $HOME/.vim/sql.vim
autocmd FileType python so $HOME/.vim/python.vim
autocmd FileType text so $HOME/.vim/txt.vim
autocmd FileType vim so $HOME/.vim/vim.vim

" according to smartindent help, this makes comments align as i wish
inoremap # X#

" Here are some other handy keybindings I use
let mapleader = ","
nnoremap <leader>e :edit <C-R>=expand('%:p:h') . "/"<CR>

" Make editing in command-line mode simpler for me - emacs-style
cnoremap <C-A> <Home>
cnoremap <C-E> <End>
cnoremap <C-F> <Right>
cnoremap <C-B> <Left>
cnoremap <Esc>b <S-Left>
cnoremap <Esc>f <S-Right>
cnoremap <C-D> <Del>
cnoremap <C-N> <Down>
cnoremap <C-P> <Up>
cnoremap <C-J> <Down>
cnoremap <C-K> <Up>

" Easy way to clear hilight from search
nnoremap <leader><space> :noh<CR>

" Easy way to edit my vimrc
nnoremap <leader>v :edit $MYVIMRC<CR>

" Sane encoding ahoy!
set encoding=utf-8

" Connect to the system clipboard
set clipboard=unnamed

" Let vim change the cursor in iTerm
if exists('$ITERM_PROFILE')
    let &t_SI="\<Esc>]50;CursorShape=1\x7"
    let &t_EI="\<Esc>]50;CursorShape=0\x7"
endif

" Set up colors how I like
set background=dark
colorscheme solarized

" Bring in machine-local customizations
if filereadable(glob("~/.vimrc.local"))
    so ~/.vimrc.local
endif
